#pragma checksum "C:\Users\josue\GitHub\DecisionMaker\Pages\Movies.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "000176ba615dbe6fda9fcf0cfb58dfd5eee8e4fa"
// <auto-generated/>
#pragma warning disable 1591
namespace DecisionMaker.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\josue\GitHub\DecisionMaker\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\josue\GitHub\DecisionMaker\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\josue\GitHub\DecisionMaker\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\josue\GitHub\DecisionMaker\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\josue\GitHub\DecisionMaker\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\josue\GitHub\DecisionMaker\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\josue\GitHub\DecisionMaker\_Imports.razor"
using DecisionMaker;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\josue\GitHub\DecisionMaker\_Imports.razor"
using DecisionMaker.Shared;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/movies")]
    public partial class Movies : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h3>Movies</h3>\r\n\r\n");
            __builder.OpenElement(1, "ol");
            __builder.AddMarkupContent(2, "\r\n");
#nullable restore
#line 5 "C:\Users\josue\GitHub\DecisionMaker\Pages\Movies.razor"
     foreach (var movie in movies)
    {

#line default
#line hidden
#nullable disable
            __builder.AddContent(3, "    ");
            __builder.OpenElement(4, "li");
            __builder.AddMarkupContent(5, "\r\n        \r\n        ");
            __builder.OpenElement(6, "span");
            __builder.AddContent(7, 
#nullable restore
#line 9 "C:\Users\josue\GitHub\DecisionMaker\Pages\Movies.razor"
               movie.Title

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(8, "\r\n        ");
            __builder.OpenElement(9, "button");
            __builder.AddAttribute(10, "class", "btn-remove");
            __builder.AddAttribute(11, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 10 "C:\Users\josue\GitHub\DecisionMaker\Pages\Movies.razor"
                                             (() => RemoveMovie(movie.Title))

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(12, "x");
            __builder.CloseElement();
            __builder.AddMarkupContent(13, "\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(14, "\r\n");
#nullable restore
#line 12 "C:\Users\josue\GitHub\DecisionMaker\Pages\Movies.razor"
    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.AddMarkupContent(15, "\r\n\r\n");
            __builder.OpenElement(16, "input");
            __builder.AddAttribute(17, "class", "input-josue");
            __builder.AddAttribute(18, "placeholder", "e.g., The Room");
            __builder.AddAttribute(19, "onkeyup", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>(this, 
#nullable restore
#line 16 "C:\Users\josue\GitHub\DecisionMaker\Pages\Movies.razor"
                                                                                                                     AddMovieOnEnter

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(20, "value", Microsoft.AspNetCore.Components.BindConverter.FormatValue(
#nullable restore
#line 16 "C:\Users\josue\GitHub\DecisionMaker\Pages\Movies.razor"
                                                                     newMovie

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(21, "oninput", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => newMovie = __value, newMovie));
            __builder.SetUpdatesAttributeName("value");
            __builder.CloseElement();
            __builder.AddMarkupContent(22, "\r\n");
            __builder.OpenElement(23, "button");
            __builder.AddAttribute(24, "class", "btn-add");
            __builder.AddAttribute(25, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 17 "C:\Users\josue\GitHub\DecisionMaker\Pages\Movies.razor"
                                  AddMovie

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(26, "Add movie");
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 19 "C:\Users\josue\GitHub\DecisionMaker\Pages\Movies.razor"
       
    // Field to maintain the state of the list
    public IList<DecisionItem> movies = new List<DecisionItem>();
    // String to bind to text input
    private string newMovie;

    // Method for adding movies on click
    private void AddMovie()
    {
        if (!string.IsNullOrWhiteSpace(newMovie))
        {
            movies.Add(new DecisionItem { Title = newMovie });
            newMovie = string.Empty;
        }
    }
    // Method for adding movies on "Enter"
    private void AddMovieOnEnter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            AddMovie();
        }
    }

    // Method for removing movie from Movie
    private void RemoveMovie(string Title)
    {
        var itemToRemove = movies.Single(movie => movie.Title == Title);
        movies.Remove(itemToRemove);
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
