@page "/food"
@inject Blazored.LocalStorage.ILocalStorageService LocalStore


<h3>foods</h3>

<span style="font-size: 24px">@foods.Decision</span>

<br />

<button class="btn-choose" @onclick="(() => foods.MakeDecision())">Decide a Restaurant</button>

<hr />

<input class="input-josue" placeholder="e.g., de Vere's Irish Pub" @bind-value="NewChoice" @bind-value:event="oninput" @onkeyup="AddChoiceOnEnter" />
<button class="btn-add" @onclick="AddChoiceToChoices">Add Food</button>
<button class="btn-choose" @onclick="ClearLocalStorage">Clear All</button>

<ul>
    @foreach (var choice in foods.Items)
    {
        <li>
            <span>@choice.Name</span>
            <button class="btn-remove" @onclick="(() => RemoveChoice(choice.Name))">x</button>
        </li>
    }
</ul>

@code {
    public Activity2 foods = new Activity2 { };
    private string NewChoice;
    const string Key = "FoodList";

    // Add Choice to foods
    // Reload items on return
    protected override async Task OnInitializedAsync()
    {
        foods = await LocalStore.GetItemAsync<Activity2>(Key);

        if (foods == null || foods.Items.Count == 0)
        {
            foods = new Activity2 { };
        }

    }

    public async void UpdateLocalStorage()
    {
        await LocalStore.SetItemAsync(Key, foods);
    }

    public async void ClearLocalStorage()
    {
        foods.Items.Clear();
        await LocalStore.ClearAsync();
    }

    public void AddChoiceToChoices()

    {
        bool isNotEmpty = !string.IsNullOrWhiteSpace(NewChoice);
        bool isNewChoice = !foods.Items.Any(choice => choice.Name == NewChoice);

        if (isNotEmpty && isNewChoice)
        {
            var item = new Choice2 { Name = NewChoice };


            foods.Items.Add(item);

            NewChoice = string.Empty;

            UpdateLocalStorage();
        }

    }

    // Method for adding choices on "Enter"
    public void AddChoiceOnEnter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            AddChoiceToChoices();
        }
    }


    // Method for removing a choice
    public void RemoveChoice(string ChoiceToRemove)
    {
        var ItemToRemove = foods.Items.Single(choice => choice.Name == ChoiceToRemove);
        foods.Items.Remove(ItemToRemove);
        UpdateLocalStorage();
    }

}
